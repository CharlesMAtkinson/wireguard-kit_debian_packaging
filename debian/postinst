#!/bin/bash

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

case "$1" in
    configure)
        dir=/etc/wireguard/clients/Archive
        mkdir -p "$dir"
        ;;
    abort-upgrade|abort-remove|abort-deconfigure)
        ;;
    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# This deb-systemd-helper section should be generated by debhelper but
# * The debhelper tools for doing so were evolving ("dh_systemd_enable is no
#   longer used in compat >= 11, please use dh_installsystemd instead")
# * The requirement is to disable non default named .service and .timer units
# * No usage examples were found similar to the requirement
# * deb-systemd-helper mtime was Dec 2020 so almost two years unchanged
# * The template used for this deb-systemd-helper section was from 
#   https://github.com/Debian/debhelper > autoscripts > 
#   postinst-systemd-dont-enable with last commit Jan 2018 so ~5 years unchanged

# Docs: https://github.com/Debian/debhelper > autoscripts

if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if deb-systemd-helper debian-installed sync_wireguard_to_standby.service; then
		# This will only remove masks created by d-s-h on package removal.
		deb-systemd-helper unmask sync_wireguard_to_standby.service >/dev/null || true

		if deb-systemd-helper --quiet was-enabled sync_wireguard_to_standby.service; then
			# Create new symlinks, if any.
			deb-systemd-helper enable sync_wireguard_to_standby.service >/dev/null || true
		fi
	fi

	if deb-systemd-helper debian-installed sync_wireguard_to_standby.timer; then
		# This will only remove masks created by d-s-h on package removal.
		deb-systemd-helper unmask sync_wireguard_to_standby.timer >/dev/null || true

		if deb-systemd-helper --quiet was-enabled sync_wireguard_to_standby.timer; then
			# Create new symlinks, if any.
			deb-systemd-helper enable sync_wireguard_to_standby.timer >/dev/null || true
		fi
	fi

	if deb-systemd-helper debian-installed wireguard-logger.service; then
		# This will only remove masks created by d-s-h on package removal.
		deb-systemd-helper unmask wireguard-logger.service >/dev/null || true

		if deb-systemd-helper --quiet was-enabled wireguard-logger.service; then
			# Create new symlinks, if any.
			deb-systemd-helper enable wireguard-logger.service >/dev/null || true
		fi
	fi

	if deb-systemd-helper debian-installed wireguard-logger.timer; then
		# This will only remove masks created by d-s-h on package removal.
		deb-systemd-helper unmask wireguard-logger.timer >/dev/null || true

		if deb-systemd-helper --quiet wireguard-logger-enabled sync_wireguard_to_standby.timer; then
			# Create new symlinks, if any.
			deb-systemd-helper enable wireguard-logger.timer >/dev/null || true
		fi
	fi

	# Update the statefile to add new symlinks (if any), which need to be cleaned
	# up on purge. Also remove old symlinks.
	deb-systemd-helper update-state \
        sync_wireguard_to_standby.service \
        sync_wireguard_to_standby.timer \
        wireguard-logger.service \
        wireguard-logger.timer \
        >/dev/null || true
fi

#DEBHELPER#
